# Generated by Django 2.1 on 2018-08-27 08:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('highTemp', models.BooleanField()),
                ('temp', models.SmallIntegerField()),
                ('chance', models.SmallIntegerField()),
                ('time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('medtype', models.CharField(choices=[('0', 'Analgesic'), ('1', 'Antibiotic'), ('2', 'Other')], max_length=1)),
                ('ingredient', models.ManyToManyField(to='diagnostics.Ingredient')),
            ],
        ),
        migrations.CreateModel(
            name='MonitoringInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heartratebeat', models.SmallIntegerField()),
                ('oxygenlevel', models.SmallIntegerField()),
                ('liquidlevel', models.SmallIntegerField()),
                ('time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('alergying', models.ManyToManyField(to='diagnostics.Ingredient')),
                ('alergymed', models.ManyToManyField(to='diagnostics.Medicine')),
                ('monitoring', models.ManyToManyField(to='diagnostics.MonitoringInfo')),
            ],
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('content', models.CharField(max_length=10000)),
                ('ruletype', models.CharField(choices=[('0', 'Disease decision making rule'), ('1', 'Patient alergy detection rule'), ('2', 'Find disease symptoms rule'), ('3', 'Detect disease based on symptoms rule'), ('4', 'Monitoring alarm rule'), ('5', 'Rule for grouping patients')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Syndrome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.AddField(
            model_name='disease',
            name='regularsympt',
            field=models.ManyToManyField(related_name='regular_syndrome', to='diagnostics.Syndrome'),
        ),
        migrations.AddField(
            model_name='disease',
            name='strongsympt',
            field=models.ManyToManyField(related_name='strong_syndrome', to='diagnostics.Syndrome'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='disease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diagnostics.Disease'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='medicine',
            field=models.ManyToManyField(to='diagnostics.Medicine'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diagnostics.Patient'),
        ),
    ]
